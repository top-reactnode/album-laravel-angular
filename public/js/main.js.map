{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/post-dialog/post-dialog.component.css","webpack:///./src/app/post-dialog/post-dialog.component.html","webpack:///./src/app/post-dialog/post-dialog.component.ts","webpack:///./src/app/post.service.ts","webpack:///./src/app/post.ts","webpack:///./src/app/post/post.component.css","webpack:///./src/app/post/post.component.html","webpack:///./src/app/post/post.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".float-button {\\r\\n    position: fixed;\\r\\n    bottom: 40px;\\r\\n    right: 40px;\\r\\n}\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <span>Photos Album</span>\\r\\n</mat-toolbar>\\r\\n\\r\\n<mat-divider></mat-divider>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-around stretch\\\" >\\r\\n  <app-post *ngFor=\\\"let p of posts\\\" [post]=\\\"p\\\"></app-post>\\r\\n</div>\\r\\n\\r\\n<button mat-fab color=\\\"primary\\\" class=\\\"float-button\\\" (click)=\\\"openDialog()\\\">\\r\\n  <mat-icon>add</mat-icon>\\r\\n</button>\"","import { Component } from '@angular/core';\r\nimport { Post } from './post';\r\nimport { MatDialog } from '@angular/material';\r\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\r\nimport { PostService } from './post.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n\r\n\r\n  title = 'app';\r\n  private posts: Post[];\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private postService: PostService) {}\r\n\r\n  ngOnInit() {\r\n    this.posts = this.postService.posts;\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(PostDialogComponent, {\r\n      width: '600px'\r\n    });\r\n    dialogRef.afterClosed().subscribe(\r\n      (result) => {\r\n        if (result) {\r\n          this.postService.save(result.post, result.arquivo);\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatButtonModule, MatDialog } from '@angular/material';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { PostComponent } from './post/post.component';\r\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\r\nimport { PostService } from './post.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PostComponent,\r\n    PostDialogComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    HttpClientModule,\r\n\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatDialogModule,\r\n    MatChipsModule,\r\n    MatBadgeModule,\r\n\r\n  ],\r\n  providers: [\r\n    PostService\r\n  ],\r\n  \r\n  entryComponents : [\r\n    PostDialogComponent\r\n  ], \r\n  \r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","module.exports = \"\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around left\\\">\\r\\n  <div fxLaylout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n    <mat-form-field fxFlex=\\\"50\\\">\\r\\n      <input matInput placeholder=\\\"Your name\\\" [(ngModel)]=\\\"dados.post.name\\\">\\r\\n      <mat-hint>Type your name</mat-hint>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field fxFlex=\\\"40\\\">\\r\\n        <input matInput placeholder=\\\"Your email\\\"  [(ngModel)]=\\\"dados.post.email\\\">\\r\\n        <mat-hint>Type your email</mat-hint>\\r\\n      </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div fxLaylout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n      <mat-form-field fxFlex=\\\"50\\\">\\r\\n        <input matInput placeholder=\\\"Title of the message\\\"  \\r\\n               [(ngModel)]=\\\"dados.post.title\\\">\\r\\n      </mat-form-field>\\r\\n  \\r\\n      <mat-form-field fxFlex=\\\"40\\\">\\r\\n          <input matInput placeholder=\\\"Subtitle of the message\\\"  \\r\\n                 [(ngModel)]=\\\"dados.post.subtitle\\\">\\r\\n      </mat-form-field>\\r\\n  </div>  \\r\\n  <mat-form-field>\\r\\n    <textarea matInput placeholder=\\\"Type the content of your message \\\"  \\r\\n              [(ngModel)]=\\\"dados.post.message\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\\r\\n<input type=\\\"file\\\" style=\\\"display: none;\\\" \\r\\n      (change)=\\\"changedfile($event)\\\" #fileinput>\\r\\n\\r\\n<button mat-stroked-button color=\\\"primary\\\" (click)=\\\"fileinput.click()\\\">\\r\\n  <mat-icon>add_a_photo</mat-icon>\\r\\n  Add a Photo\\r\\n</button>\\r\\n<p *ngIf=\\\"filename!=''\\\">\\r\\n  <strong>File: </strong>{{filename}}\\r\\n  <mat-icon color=\\\"primary\\\">done</mat-icon>\\r\\n</p>\\r\\n\\r\\n<br><br>\\r\\n\\r\\n<div style=\\\"text-align: center;\\\">\\r\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"save()\\\">OK</button>\\r\\n  <button mat-button color=\\\"warn\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { Post } from '../post';\r\n\r\n@Component({\r\n  selector: 'app-post-dialog',\r\n  templateUrl: './post-dialog.component.html',\r\n  styleUrls: ['./post-dialog.component.css']\r\n})\r\nexport class PostDialogComponent implements OnInit {\r\n\r\n  private filename: string = '';\r\n\r\n  private dados = {\r\n    post: new Post(\"\",\"\", \"\", \"\", \"\", \"\"),\r\n    arquivo: null\r\n  };\r\n\r\n  constructor(\r\n    public dialogref: MatDialogRef<PostDialogComponent>) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  changedfile(event) {\r\n    // console.log(event.target.files[0]);\r\n    this.filename = event.target.files[0].name;\r\n    this.dados.arquivo = event.target.files[0];\r\n  }\r\n\r\n  save() {\r\n    this.dialogref.close(this.dados);\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogref.close(null);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpEventType, HttpEvent } from '@angular/common/http';\r\nimport { Post } from './post';\r\n\r\n@Injectable()\r\nexport class PostService {\r\n\r\n  public posts: Post[] = [];\r\n\r\n  constructor(private http: HttpClient) { \r\n    this.http.get(\"/api/\").subscribe(\r\n      (posts: any[]) => {\r\n        for(let p of posts) {\r\n          this.posts.push(\r\n            new Post(\r\n              p.name, p.title,p.subtitle,\r\n              p.email,p.message,p.file,\r\n              p.id,p.likes\r\n            )\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  save(post: Post, file: File) {\r\n    const uploadData = new FormData();\r\n    uploadData.append('name', post.name);\r\n    uploadData.append('email', post.email);\r\n    uploadData.append('title', post.title);\r\n    uploadData.append('subtitle', post.subtitle);\r\n    uploadData.append('message', post.message);\r\n    uploadData.append('file', file, file.name);\r\n    \r\n    this.http.post(\"/api\", uploadData, { reportProgress: true, observe: 'events'})\r\n      .subscribe((event: any) => {\r\n        if (event.type == HttpEventType.Response) {\r\n          // console.log(event);\r\n          let p: any = event.body;\r\n          this.posts.push(\r\n            new Post(\r\n              p.name, p.title,p.subtitle,\r\n              p.email,p.message,p.file,\r\n              p.id,p.likes\r\n            )\r\n          );          \r\n        }\r\n        if (event.type == HttpEventType.UploadProgress) {\r\n          console.log('UploadProgress');\r\n          console.log(event);\r\n        }        \r\n      })\r\n\r\n\r\n  }\r\n\r\n  like(id: number) {\r\n    this.http.get('/api/like/' + id)\r\n      .subscribe(\r\n        (event: any) => {\r\n          let p = this.posts.find((p) => p.id == id);\r\n          p.likes = event.likes;\r\n        }\r\n      );\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.http.delete(\"/api/\" + id)\r\n      .subscribe( (event) => {\r\n        // console.log(event);\r\n        let i = this.posts.findIndex((p) => p.id == id);\r\n        if (i >= 0)\r\n          this.posts.splice(i,1);\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","export class Post {\r\n    constructor(\r\n        public name: string,\r\n        public title: string,\r\n        public subtitle: string,\r\n        public email: string,\r\n        public message: string,\r\n        public file?: string,\r\n        public id?: number,\r\n        public likes?: number\r\n    ) {}\r\n}\r\n","module.exports = \".card {\\r\\n    max-width: 300px;\\r\\n    margin: 10px;\\r\\n}\"","module.exports = \"<mat-card fxFlex class=\\\"card\\\">\\r\\n  <mat-card-header>\\r\\n    <div mat-card-avatar></div>\\r\\n    <mat-card-title>{{post.title}}</mat-card-title>\\r\\n    <mat-card-subtitle>{{post.subtitle}}</mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n  <img mat-card-image src=\\\"/storage/{{post.file}}\\\" alt=\\\"Photo of a Shiba Inu\\\">\\r\\n  <mat-card-content>\\r\\n    <p>\\r\\n      {{post.message}}\\r\\n    </p>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions>\\r\\n    <button mat-button (click)=\\\"like()\\\">\\r\\n      <mat-icon disabled aria-label=\\\"Like this photo\\\" *ngIf=\\\"post.likes===0\\\" [matBadge]=\\\"post.likes\\\" \\r\\n        matBadgeOverlap=\\\"false\\\" color=\\\"\\\">favorite_bord</mat-icon>\\r\\n      <mat-icon color=\\\"warn\\\" *ngIf=\\\"post.likes>0\\\" [matBadge]=\\\"post.likes\\\" \\r\\n        matBadgeColor=\\\"warn\\\" matBadgeOverlap=\\\"false\\\">favorite</mat-icon>\\r\\n    </button>\\r\\n    <button mat-button color=\\\"accent\\\" (click)=\\\"delete()\\\" color=\\\"warn\\\">APAGAR</button>\\r\\n    <a mat-button color=\\\"primary\\\" href=\\\"/storage/{{post.file}}\\\" download>\\r\\n      <mat-icon>cloud_download</mat-icon>\\r\\n    </a>\\r\\n  </mat-card-actions>\\r\\n</mat-card>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Post } from '../post';\r\nimport { PostService } from '../post.service';\r\n\r\n@Component({\r\n  selector: 'app-post',\r\n  templateUrl: './post.component.html',\r\n  styleUrls: ['./post.component.css']\r\n})\r\nexport class PostComponent implements OnInit {\r\n\r\n  @Input() post: Post;\r\n  \r\n  constructor(\r\n    private postService: PostService) { }\r\n  \r\n  ngOnInit() {\r\n  }\r\n\r\n  like() {\r\n    this.postService.like(this.post.id);\r\n  }\r\n\r\n  delete() {\r\n    this.postService.delete(this.post.id);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}